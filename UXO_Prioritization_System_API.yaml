openapi: 3.0.3
info:
  title: UXO Prioritization API
  version: 1.0.0
  description: |-
    API backend for the UXO Prioritization and Risk Assessment System.

    This API allows users to:
    - View UXO records across regions
    - View regional GIS data with danger scores
    - Filter/search by region, ordnance type, and condition
    - Create and manage UXO entries (authenticated users only)

    Security Note:
    Write operations (POST, PATCH, DELETE) require authentication.
paths:
  /api/v1/citizen-reports/review/:
    get:
      operationId: citizen_reports_review_list
      description: Admin-only view to list all citizen reports for review. (No changes
        needed)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - citizen-reports
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminCitizenReportList'
          description: ''
  /api/v1/citizen-reports/review/{id}/:
    get:
      operationId: citizen_reports_review_retrieve
      description: Admin-only view to retrieve or delete a single report. (No changes
        needed)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - citizen-reports
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCitizenReport'
          description: ''
    delete:
      operationId: citizen_reports_review_destroy
      description: Admin-only view to retrieve or delete a single report. (No changes
        needed)
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - citizen-reports
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/citizen-reports/review/{id}/verify/:
    post:
      operationId: citizen_reports_review_verify_create
      description: Fill out the form to provide the necessary details. Submitting
        will create a new, official UXORecord and mark this report as 'verified'.
      summary: Verify Citizen Report & Create UXO Record
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - citizen-reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportVerificationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportVerificationRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportVerification'
          description: ''
  /api/v1/citizen-reports/submit/:
    post:
      operationId: citizen_reports_submit_create
      description: Public view for citizens to submit a new report. (No changes needed)
      tags:
      - citizen-reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CitizenReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CitizenReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CitizenReportRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CitizenReport'
          description: ''
  /api/v1/records/:
    get:
      operationId: records_list
      description: |-
        API endpoint for viewing and managing UXO records.
        Uses different serializers for reading vs. writing data to avoid schema errors.
      parameters:
      - in: query
        name: burial_status
        schema:
          type: string
          enum:
          - BUR
          - CON
          - EXP
          - PAR
        description: |-
          How exposed or buried is the ordnance?

          * `EXP` - Exposed
          * `PAR` - Partially Exposed
          * `CON` - Concealed (by vegetation/debris)
          * `BUR` - Buried
      - in: query
        name: danger_score_max
        schema:
          type: number
          format: double
          nullable: true
        description: Calculated danger score for this specific UXO incident.
      - in: query
        name: danger_score_min
        schema:
          type: number
          format: double
          nullable: true
        description: Calculated danger score for this specific UXO incident.
      - in: query
        name: is_loaded
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: ordnance_condition
        schema:
          type: string
          enum:
          - COR
          - DMG
          - INT
          - LEK
        description: |-
          * `INT` - Intact
          * `COR` - Corroded
          * `DMG` - Damaged/Deformed
          * `LEK` - Leaking/Exuding
      - in: query
        name: ordnance_type
        schema:
          type: string
          enum:
          - ART
          - BOM
          - IED
          - MIN
          - MOR
          - OTH
          - ROC
          - SUB
        description: |-
          * `ART` - Artillery Projectile
          * `MOR` - Mortar Bomb
          * `ROC` - Rocket
          * `BOM` - Aircraft Bomb
          * `MIN` - Landmine
          * `SUB` - Submunition
          * `IED` - Improvised Explosive Device
          * `OTH` - Other
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: proximity_to_civilians
        schema:
          type: string
          enum:
          - IMM
          - NEA
          - REM
        description: |-
          General proximity to civilians or critical infrastructure.

          * `IMM` - Immediate (0-100m to civilians/infrastructure)
          * `NEA` - Near (101-500m)
          * `REM` - Remote (>500m)
      - in: query
        name: region
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - records
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUXORecordList'
          description: ''
    post:
      operationId: records_create
      description: |-
        API endpoint for viewing and managing UXO records.
        Uses different serializers for reading vs. writing data to avoid schema errors.
      tags:
      - records
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UXORecordWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UXORecordWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UXORecordWriteRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UXORecordWrite'
          description: ''
  /api/v1/records/{id}/:
    get:
      operationId: records_retrieve
      description: |-
        API endpoint for viewing and managing UXO records.
        Uses different serializers for reading vs. writing data to avoid schema errors.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uxo record.
        required: true
      tags:
      - records
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UXORecord'
          description: ''
    put:
      operationId: records_update
      description: |-
        API endpoint for viewing and managing UXO records.
        Uses different serializers for reading vs. writing data to avoid schema errors.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uxo record.
        required: true
      tags:
      - records
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UXORecordWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UXORecordWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UXORecordWriteRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UXORecordWrite'
          description: ''
    patch:
      operationId: records_partial_update
      description: |-
        API endpoint for viewing and managing UXO records.
        Uses different serializers for reading vs. writing data to avoid schema errors.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uxo record.
        required: true
      tags:
      - records
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUXORecordWriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUXORecordWriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUXORecordWriteRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UXORecordWrite'
          description: ''
    delete:
      operationId: records_destroy
      description: |-
        API endpoint for viewing and managing UXO records.
        Uses different serializers for reading vs. writing data to avoid schema errors.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this uxo record.
        required: true
      tags:
      - records
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/reports/geospatial/heatmap/:
    get:
      operationId: reports_geospatial_heatmap_retrieve
      description: '...'
      summary: Geospatial Heatmap Data
      tags:
      - Reports & Analytics
      - Geospatial
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/reports/geospatial/hotzones/:
    get:
      operationId: reports_geospatial_hotzones_retrieve
      description: "\nRetrieves pre-calculated risk 'hot zones'.\nThese are generated\
        \ by running a DBSCAN clustering algorithm on the UXO records.\nEach feature\
        \ is a polygon representing a cluster of high-risk incidents.\nThe 'record_count'\
        \ and 'avg_danger_score' are properties of each hot zone.\n    "
      summary: Risk Hot Zones (Clustered)
      tags:
      - Reports & Analytics
      - Geospatial
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotZone'
          description: ''
  /api/v1/reports/geospatial/within-bbox/:
    get:
      operationId: reports_geospatial_within_bbox_retrieve
      description: "\nRetrieves all UXO records whose location point is within a given\
        \ geographic bounding box.\nThe bounding box must be specified as a comma-separated\
        \ string of four coordinates in the format:\n`min_longitude,min_lat,max_longitude,max_lat`\n\
        The response is a GeoJSON FeatureCollection, ready to be rendered on a map.\n\
        \    "
      summary: Filter Records Within a Bounding Box
      parameters:
      - in: query
        name: bbox
        schema:
          type: string
        description: 'Bounding box coordinates: min_lon,min_lat,max_lon,max_lat'
        required: true
        examples:
          BoundingBoxExample:
            value: 36.2,33.4,36.4,33.6
            summary: Bounding Box Example
      tags:
      - Reports & Analytics
      - Geospatial
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UXORecord'
          description: ''
  /api/v1/reports/statistics/:
    get:
      operationId: reports_statistics_retrieve
      description: "\nA flexible endpoint to generate various statistics about UXO\
        \ records based on the new data model.\nSupports two main analysis types:\
        \ 'aggregate' and 'grouped'.\n\n**1. Aggregate Analysis (`analysis_type=aggregate`):**\n\
        Performs a single aggregation over the entire dataset.\n- `numeric_field`:\
        \ The field to aggregate (must be 'danger_score').\n- `operation`: The function\
        \ to apply ('avg', 'max', 'min', 'sum', 'count').\n\n*Example: `/api/v1/reports/statistics/?analysis_type=aggregate&numeric_field=danger_score&operation=avg`*\n\
        \n**2. Grouped Analysis (`analysis_type=grouped`):**\nGroups data by a category\
        \ and performs an aggregation on each group.\n- `group_by`: The field to group\
        \ results by (e.g., 'region__name', 'ordnance_type').\n- `aggregate_op` (optional):\
        \ The function for aggregation ('avg', 'sum', 'max', 'min'). Defaults to 'count'.\n\
        - `aggregate_field` (optional): The numeric field for aggregation (must be\
        \ 'danger_score'). Required if `aggregate_op` is not 'count'.\n\n*Example\
        \ 1 (Grouped Count): `/api/v1/reports/statistics/?analysis_type=grouped&group_by=ordnance_type`*\n\
        *Example 2 (Grouped Average): `/api/v1/reports/statistics/?analysis_type=grouped&group_by=region__name&aggregate_op=avg&aggregate_field=danger_score`*\n\
        \    "
      summary: Generate UXO Statistics
      parameters:
      - in: query
        name: aggregate_field
        schema:
          type: string
        description: 'Field for calculation within groups (for ''grouped'' analysis).
          Valid options: ''danger_score'''
      - in: query
        name: aggregate_op
        schema:
          type: string
        description: Aggregation function for groups (avg, max, min, sum). Defaults
          to 'count'.
      - in: query
        name: analysis_type
        schema:
          type: string
        description: 'Type of analysis: ''aggregate'' or ''grouped'''
        required: true
        examples:
          AggregateAnalysis:
            value: aggregate
            summary: Overall Stats
          GroupedAnalysis:
            value: grouped
            summary: Grouped Stats
      - in: query
        name: group_by
        schema:
          type: string
        description: 'Field to group by (for ''grouped'' analysis). Valid options:
          region__name, ordnance_type, ordnance_condition, is_loaded, proximity_to_civilians,
          burial_status'
      - in: query
        name: numeric_field
        schema:
          type: string
        description: 'Field for calculation (for ''aggregate'' analysis). Valid options:
          ''danger_score'''
      - in: query
        name: operation
        schema:
          type: string
        description: Aggregation function for 'aggregate' analysis (avg, max, min,
          sum, count).
      tags:
      - Reports & Analytics
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    AdminCitizenReport:
      type: object
      description: Serializer for admins reviewing citizen reports. (No changes needed)
      properties:
        id:
          type: integer
          readOnly: true
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        verified_record:
          type: string
          readOnly: true
        name:
          type: string
          description: First name of the reporter.
          maxLength: 100
        last_name:
          type: string
          description: Last name of the reporter.
          maxLength: 100
        national_nr:
          type: string
          description: National number or unique identifier for verification.
          maxLength: 50
        phone_number:
          type: string
          description: Contact phone number of the reporter.
          maxLength: 20
        image:
          type: string
          format: uri
          description: An image of the reported UXO provided by the citizen.
        description:
          type: string
          description: Detailed description of the sighting.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          description: |-
            The current status of the report, managed by admins.

            * `pending` - Pending Review
            * `verified` - Verified - Record Created
            * `rejected` - Rejected - Invalid Information
        date_reported:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_reported
      - description
      - id
      - image
      - last_name
      - location
      - name
      - national_nr
      - verified_record
    BurialStatusEnum:
      enum:
      - EXP
      - PAR
      - CON
      - BUR
      type: string
      description: |-
        * `EXP` - Exposed
        * `PAR` - Partially Exposed
        * `CON` - Concealed (by vegetation/debris)
        * `BUR` - Buried
    CitizenReport:
      type: object
      description: Serializer for citizens submitting a new report. (No changes needed)
      properties:
        id:
          type: integer
          readOnly: true
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        description:
          type: string
          description: Detailed description of the sighting.
        image:
          type: string
          format: uri
          description: An image of the reported UXO provided by the citizen.
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
          description: |-
            The current status of the report, managed by admins.

            * `pending` - Pending Review
            * `verified` - Verified - Record Created
            * `rejected` - Rejected - Invalid Information
        date_reported:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_reported
      - description
      - id
      - image
      - location
      - status
    CitizenReportRequest:
      type: object
      description: Serializer for citizens submitting a new report. (No changes needed)
      properties:
        name:
          type: string
          writeOnly: true
          minLength: 1
          description: First name of the reporter.
          maxLength: 100
        last_name:
          type: string
          writeOnly: true
          minLength: 1
          description: Last name of the reporter.
          maxLength: 100
        national_nr:
          type: string
          writeOnly: true
          minLength: 1
          description: National number or unique identifier for verification.
          maxLength: 50
        phone_number:
          type: string
          writeOnly: true
          description: Contact phone number of the reporter.
          maxLength: 20
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        description:
          type: string
          minLength: 1
          description: Detailed description of the sighting.
        image:
          type: string
          format: binary
          description: An image of the reported UXO provided by the citizen.
      required:
      - description
      - image
      - last_name
      - location
      - name
      - national_nr
    GisFeatureCollectionEnum:
      type: string
      enum:
      - FeatureCollection
    GisFeatureEnum:
      type: string
      enum:
      - Feature
    HotZone:
      type: object
      description: GeoJSON serializer for the HotZone model.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - Polygon
            coordinates:
              type: array
              items:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 4
              example:
              - - - 0.0
                  - 0.0
                - - 0.0
                  - 50.0
                - - 50.0
                  - 50.0
                - - 50.0
                  - 0.0
                - - 0.0
                  - 0.0
        properties:
          type: object
          properties:
            record_count:
              type: integer
              maximum: 2147483647
              minimum: -2147483648
              description: Number of UXO records within this hot zone.
            avg_danger_score:
              type: number
              format: double
              description: The average danger score of all records in this zone.
    OrdnanceConditionEnum:
      enum:
      - INT
      - COR
      - DMG
      - LEK
      type: string
      description: |-
        * `INT` - Intact
        * `COR` - Corroded
        * `DMG` - Damaged/Deformed
        * `LEK` - Leaking/Exuding
    OrdnanceTypeEnum:
      enum:
      - ART
      - MOR
      - ROC
      - BOM
      - MIN
      - SUB
      - IED
      - OTH
      type: string
      description: |-
        * `ART` - Artillery Projectile
        * `MOR` - Mortar Bomb
        * `ROC` - Rocket
        * `BOM` - Aircraft Bomb
        * `MIN` - Landmine
        * `SUB` - Submunition
        * `IED` - Improvised Explosive Device
        * `OTH` - Other
    PaginatedAdminCitizenReportList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminCitizenReport'
    PaginatedUXORecordList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          $ref: '#/components/schemas/UXORecordList'
    PatchedUXORecordWriteRequest:
      type: object
      description: |-
        A standard serializer for CREATING AND UPDATING UXORecord instances.
        Used for POST, PUT, PATCH requests. drf-spectacular can handle this without errors.
      properties:
        region:
          type: integer
          nullable: true
          description: The administrative region this UXO record belongs to.
        ordnance_type:
          $ref: '#/components/schemas/OrdnanceTypeEnum'
        ordnance_condition:
          $ref: '#/components/schemas/OrdnanceConditionEnum'
        is_loaded:
          type: boolean
          description: Is the ordnance considered to be loaded and fuzed?
        proximity_to_civilians:
          allOf:
          - $ref: '#/components/schemas/ProximityToCiviliansEnum'
          description: |-
            General proximity to civilians or critical infrastructure.

            * `IMM` - Immediate (0-100m to civilians/infrastructure)
            * `NEA` - Near (101-500m)
            * `REM` - Remote (>500m)
        burial_status:
          allOf:
          - $ref: '#/components/schemas/BurialStatusEnum'
          description: |-
            How exposed or buried is the ordnance?

            * `EXP` - Exposed
            * `PAR` - Partially Exposed
            * `CON` - Concealed (by vegetation/debris)
            * `BUR` - Buried
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
    ProximityToCiviliansEnum:
      enum:
      - IMM
      - NEA
      - REM
      type: string
      description: |-
        * `IMM` - Immediate (0-100m to civilians/infrastructure)
        * `NEA` - Near (101-500m)
        * `REM` - Remote (>500m)
    ReportVerification:
      type: object
      description: |-
        Defines the data an admin must provide to create a UXORecord from a report.
        The fields now match the current UXORecord model and use ChoiceFields
        to render as dropdowns in the DRF browsable API.
      properties:
        ordnance_type:
          $ref: '#/components/schemas/OrdnanceTypeEnum'
        ordnance_condition:
          $ref: '#/components/schemas/OrdnanceConditionEnum'
        is_loaded:
          type: boolean
          default: true
          description: Is the ordnance considered to be loaded and fuzed?
        proximity_to_civilians:
          $ref: '#/components/schemas/ProximityToCiviliansEnum'
        burial_status:
          $ref: '#/components/schemas/BurialStatusEnum'
      required:
      - burial_status
      - ordnance_condition
      - ordnance_type
      - proximity_to_civilians
    ReportVerificationRequest:
      type: object
      description: |-
        Defines the data an admin must provide to create a UXORecord from a report.
        The fields now match the current UXORecord model and use ChoiceFields
        to render as dropdowns in the DRF browsable API.
      properties:
        ordnance_type:
          $ref: '#/components/schemas/OrdnanceTypeEnum'
        ordnance_condition:
          $ref: '#/components/schemas/OrdnanceConditionEnum'
        is_loaded:
          type: boolean
          default: true
          description: Is the ordnance considered to be loaded and fuzed?
        proximity_to_civilians:
          $ref: '#/components/schemas/ProximityToCiviliansEnum'
        burial_status:
          $ref: '#/components/schemas/BurialStatusEnum'
      required:
      - burial_status
      - ordnance_condition
      - ordnance_type
      - proximity_to_civilians
    StatusEnum:
      enum:
      - pending
      - verified
      - rejected
      type: string
      description: |-
        * `pending` - Pending Review
        * `verified` - Verified - Record Created
        * `rejected` - Rejected - Invalid Information
    UXORecord:
      type: object
      description: |-
        A GeoJSON serializer for READING UXORecord model data.
        This is used for all GET requests.
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
        properties:
          type: object
          properties:
            region:
              type: integer
              nullable: true
              description: The administrative region this UXO record belongs to.
            ordnance_type:
              enum:
              - ART
              - MOR
              - ROC
              - BOM
              - MIN
              - SUB
              - IED
              - OTH
              type: string
              description: |-
                * `ART` - Artillery Projectile
                * `MOR` - Mortar Bomb
                * `ROC` - Rocket
                * `BOM` - Aircraft Bomb
                * `MIN` - Landmine
                * `SUB` - Submunition
                * `IED` - Improvised Explosive Device
                * `OTH` - Other
            ordnance_condition:
              enum:
              - INT
              - COR
              - DMG
              - LEK
              type: string
              description: |-
                * `INT` - Intact
                * `COR` - Corroded
                * `DMG` - Damaged/Deformed
                * `LEK` - Leaking/Exuding
            is_loaded:
              type: boolean
              description: Is the ordnance considered to be loaded and fuzed?
            proximity_to_civilians:
              enum:
              - IMM
              - NEA
              - REM
              type: string
              description: |-
                General proximity to civilians or critical infrastructure.

                * `IMM` - Immediate (0-100m to civilians/infrastructure)
                * `NEA` - Near (101-500m)
                * `REM` - Remote (>500m)
            burial_status:
              enum:
              - EXP
              - PAR
              - CON
              - BUR
              type: string
              description: |-
                How exposed or buried is the ordnance?

                * `EXP` - Exposed
                * `PAR` - Partially Exposed
                * `CON` - Concealed (by vegetation/debris)
                * `BUR` - Buried
            date_reported:
              type: string
              format: date-time
              readOnly: true
            danger_score:
              type: number
              format: double
              readOnly: true
              nullable: true
              description: Calculated danger score for this specific UXO incident.
    UXORecordList:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureCollectionEnum'
        features:
          type: array
          items:
            $ref: '#/components/schemas/UXORecord'
    UXORecordWrite:
      type: object
      description: |-
        A standard serializer for CREATING AND UPDATING UXORecord instances.
        Used for POST, PUT, PATCH requests. drf-spectacular can handle this without errors.
      properties:
        region:
          type: integer
          nullable: true
          description: The administrative region this UXO record belongs to.
        ordnance_type:
          $ref: '#/components/schemas/OrdnanceTypeEnum'
        ordnance_condition:
          $ref: '#/components/schemas/OrdnanceConditionEnum'
        is_loaded:
          type: boolean
          description: Is the ordnance considered to be loaded and fuzed?
        proximity_to_civilians:
          allOf:
          - $ref: '#/components/schemas/ProximityToCiviliansEnum'
          description: |-
            General proximity to civilians or critical infrastructure.

            * `IMM` - Immediate (0-100m to civilians/infrastructure)
            * `NEA` - Near (101-500m)
            * `REM` - Remote (>500m)
        burial_status:
          allOf:
          - $ref: '#/components/schemas/BurialStatusEnum'
          description: |-
            How exposed or buried is the ordnance?

            * `EXP` - Exposed
            * `PAR` - Partially Exposed
            * `CON` - Concealed (by vegetation/debris)
            * `BUR` - Buried
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
      required:
      - burial_status
      - location
      - ordnance_condition
      - ordnance_type
      - proximity_to_civilians
    UXORecordWriteRequest:
      type: object
      description: |-
        A standard serializer for CREATING AND UPDATING UXORecord instances.
        Used for POST, PUT, PATCH requests. drf-spectacular can handle this without errors.
      properties:
        region:
          type: integer
          nullable: true
          description: The administrative region this UXO record belongs to.
        ordnance_type:
          $ref: '#/components/schemas/OrdnanceTypeEnum'
        ordnance_condition:
          $ref: '#/components/schemas/OrdnanceConditionEnum'
        is_loaded:
          type: boolean
          description: Is the ordnance considered to be loaded and fuzed?
        proximity_to_civilians:
          allOf:
          - $ref: '#/components/schemas/ProximityToCiviliansEnum'
          description: |-
            General proximity to civilians or critical infrastructure.

            * `IMM` - Immediate (0-100m to civilians/infrastructure)
            * `NEA` - Near (101-500m)
            * `REM` - Remote (>500m)
        burial_status:
          allOf:
          - $ref: '#/components/schemas/BurialStatusEnum'
          description: |-
            How exposed or buried is the ordnance?

            * `EXP` - Exposed
            * `PAR` - Partially Exposed
            * `CON` - Concealed (by vegetation/debris)
            * `BUR` - Buried
        location:
          type: object
          properties:
            type:
              type: string
              enum:
              - Point
            coordinates:
              type: array
              items:
                type: number
                format: float
              example:
              - 12.9721
              - 77.5933
              minItems: 2
              maxItems: 3
      required:
      - burial_status
      - location
      - ordnance_condition
      - ordnance_type
      - proximity_to_civilians
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
